type DocumentType = variant {
    Deed;
    Title;
    Contract;
    Inspection;
    Other;
};

type PropertyStatus = variant {
    Available;
    UnderContract;
    Sold;
};

type TransactionStatus = variant {
    Pending;
    Completed;
    Cancelled;
};

type Document = record {
    id: nat64;
    doc_type: DocumentType;
    hash: text;
    timestamp: nat64;
};

type Property = record {
    id: nat64;
    owner: principal;
    price: float64;
    location: text;
    description: text;
    status: PropertyStatus;
    nft_id: opt text;
    documents: vec Document;
};

type Transaction = record {
    id: nat64;
    property_id: nat64;
    seller: principal;
    buyer: principal;
    price: float64;
    status: TransactionStatus;
    timestamp: nat64;
};

service : {
    list_property: (price: float64, location: text, description: text) -> (Property);
    get_property: (property_id: nat64) -> (opt Property) query;
    get_all_properties: () -> (vec Property) query;
    get_user_properties: (user: principal) -> (vec Property) query;
    initiate_transaction: (property_id: nat64) -> (nat64);
    complete_transaction: (transaction_id: nat64) -> (bool);
    get_transaction: (transaction_id: nat64) -> (opt Transaction) query;
    add_document: (property_id: nat64, doc_type: DocumentType, hash: text) -> (bool);
}